*{
    padding: 0;
    margin: 0;
    outline: none;
    box-sizing: border-box;
    font-family: Arial, Helvetica, sans-serif;
}
body{
    background-color: #1D1D1D;
}
.flex{
    display: flex;
}
.flex-col{
    flex-direction: column;
}
.items-stretch{
    align-items: stretch;    
}
.flex-grow-1{
    flex-grow: 1;
}
.items-center{
    align-items: center;
}
.justify-between{
    justify-content: space-between;
}
.capitalize{
    text-transform: capitalize;
}
.text-white{
    color: white;
}
.mb-2{
    margin-bottom: 1.3rem;
}
.mb-3{
    margin-bottom: 1.6rem;
}
.ml-2{
    margin-left: 1.3rem;
}
.ml-3{
    margin-left: 1.6rem;
}
.mb-0{
    margin-bottom: 0;
}
.p-1{
    padding: 0.5rem;
}
.p-2{
    padding: 0.9rem;
}
.py-2{
    padding-top: 0.9rem;
    padding-bottom: 0.9rem;
}
.p-3{
    padding: 1.3rem;
}
.text-xl{
    font-size: 19px;
}
.bg-white{
    background-color: white;
}
.bg-gray-500{
    background-color: #B0B0B0;
}
.rounded-full{
    border-radius: 50%;
}
.rounded-sm{
    border-radius: 0.4rem;
}
.bg-transparent{
    background-color: transparent !important;
}
.border-none{
    border: none;
}
.border-2{
    border: 3px solid;
}
.border-gray-500{
    border-color: #B0B0B0;
}
.text-gray-500{
    color: #B0B0B0;
}
.cursor-pointer{
    cursor: pointer;    
}



select {
	appearance: none;
}

button.settings{
    background: none !important;
}
button.settings span{
    content: "";
    height: 5px; width: 5px;
    margin-right: 3px;
    display: inline-flex;
    border-radius: 50%;
}
button.settings span:last-child{
    margin-right: 0px;
}




select , option{
    background-color: #1D1D1D;
}
  @supports (-webkit-appearance: none) or (-moz-appearance: none) {
    .checkbox-wrapper-13 input[type=checkbox] {
      --active: #B0B0B0;
      --active-inner: #fff;
      --focus: 2px transparent;
      --border: #B0B0B0;
      --border-hover: #B0B0B0;
      --background: #fff;
      --disabled: #F6F8FF;
      --disabled-inner: #E1E6F9;
      -webkit-appearance: none;
      -moz-appearance: none;
      height: 21px;
      outline: none;
      display: inline-block;
      vertical-align: top;
      position: relative;
      margin: 0;
      cursor: pointer;
      border: 1px solid var(--bc, var(--border));
      background: var(--b, var(--background));
      transition: background 0.3s, border-color 0.3s, box-shadow 0.2s;
    }
    .checkbox-wrapper-13 input[type=checkbox]:after {
      content: "";
      display: block;
      left: 0;
      top: 0;
      position: absolute;
      transition: transform var(--d-t, 0.3s) var(--d-t-e, ease), opacity var(--d-o, 0.2s);
    }
    .checkbox-wrapper-13 input[type=checkbox]:checked {
      --b: var(--active);
      --bc: var(--active);
      --d-o: .3s;
      --d-t: .6s;
      --d-t-e: cubic-bezier(.2, .85, .32, 1.2);
    }
    .checkbox-wrapper-13 input[type=checkbox]:disabled {
      --b: var(--disabled);
      cursor: not-allowed;
      opacity: 0.9;
    }
    .checkbox-wrapper-13 input[type=checkbox]:disabled:checked {
      --b: var(--disabled-inner);
      --bc: var(--border);
    }
    .checkbox-wrapper-13 input[type=checkbox]:disabled + label {
      cursor: not-allowed;
    }
    .checkbox-wrapper-13 input[type=checkbox]:hover:not(:checked):not(:disabled) {
      --bc: var(--border-hover);
    }
    .checkbox-wrapper-13 input[type=checkbox]:focus {
      box-shadow: 0 0 0 var(--focus);
    }
    .checkbox-wrapper-13 input[type=checkbox]:not(.switch) {
      width: 21px;
    }
    .checkbox-wrapper-13 input[type=checkbox]:not(.switch):after {
      opacity: var(--o, 0);
    }
    .checkbox-wrapper-13 input[type=checkbox]:not(.switch):checked {
      --o: 1;
    }
    .checkbox-wrapper-13 input[type=checkbox] + label {
      display: inline-block;
      vertical-align: middle;
      cursor: pointer;
      margin-left: 4px;
    }

    .checkbox-wrapper-13 input[type=checkbox]:not(.switch) {
      border-radius: 3px;
    }
    .checkbox-wrapper-13 input[type=checkbox]:not(.switch):after {
      width: 5px;
      height: 9px;
      border: 2px solid var(--active-inner);
      border-top: 0;
      border-left: 0;
      left: 7px;
      top: 4px;
      transform: rotate(var(--r, 20deg));
    }
    .checkbox-wrapper-13 input[type=checkbox]:not(.switch):checked {
      --r: 43deg;
    }
  }

  .checkbox-wrapper-13 * {
    box-sizing: inherit;
  }
  .checkbox-wrapper-13 *:before,
  .checkbox-wrapper-13 *:after {
    box-sizing: inherit;
  }